buildscript {
   ext {
      queryDslVersion = "5.0.0"
   }
}

plugins {
	id 'java'
	id 'org.springframework.boot' version '2.7.8'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
	
   id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
}

group = 'com.ssafy'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-websocket'
	implementation 'io.springfox:springfox-boot-starter:3.0.0'
	implementation 'io.springfox:springfox-swagger-ui:3.0.0'
	implementation 'net.nurigo:sdk:4.2.7'
	implementation group: 'io.openvidu', name: 'openvidu-java-client', version: '2.25.0'
	// https://mvnrepository.com/artifact/org.modelmapper/modelmapper
	implementation 'org.modelmapper:modelmapper:3.1.1'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor 'org.projectlombok:lombok'
	compileOnly 'org.projectlombok:lombok:1.18.24'
	runtimeOnly 'com.mysql:mysql-connector-j'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5',
    'io.jsonwebtoken:jjwt-jackson:0.11.5'
    
    // QueryDSL
	implementation 'com.querydsl:querydsl-jpa:5.0.0'
	implementation 'com.querydsl:querydsl-apt:5.0.0'
}

// QueryDSL
def querydslDir = "$buildDir/generated/queryDsl"

querydsl {
   jpa = true
   querydslSourcesDir = querydslDir
}

sourceSets {
    main {
        java {
            srcDirs = ["src/main/java", querydslDir]
        }
    }
}

compileQuerydsl {
	options.annotationProcessorPath = configurations.querydsl
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
	querydsl.extendsFrom compileClasspath
}

tasks.named('test') {
	useJUnitPlatform()
}

tasks.withType(JavaCompile) {
    options.annotationProcessorGeneratedSourcesDirectory = file(querydslDir)
}