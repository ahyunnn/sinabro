pipeline {
    agent any
    tools {nodejs "nodejs"}
    stages {
        stage('Gitlab') {
            steps {
                script {
                    git branch: 'master',
                    credentialsId: 'GitLab',
                    url: '${GitLab 접속 주소}'
                }
            }
        }
        stage('Build') {
            steps {
                dir('Front-End/last_front') {
                    script {
                        sh "npm install"
                        sh "npm run build"
                    }
                }
                dir('Front-End') {
                    script {
                        dockerImage = docker.build "${도커 허브 이름/도커 이미지 이름:태그}"
                    }
                }
            }
        }
        stage('Docker hub push') {
            steps {
                script {
                    docker.withRegistry('', 'Docker-Hub') {
                        dockerImage.push("$BUILD_NUMBER")
                    }
                    sh "docker rmi ${도커 허브 이름/도커 이미지 이름:$BUILD_NUMBER}"
                }
            }
        }
        stage('Deploy') {
            steps {
                sshagent(credentials: ['ec2-ssh']) {
                    sh 'ssh -o StrictHostKeyChecking=no ${사용자 이름@ssh 접속 주소} "docker stop ${컨테이너 이름}"'
                    sh 'ssh -o StrictHostKeyChecking=no ${사용자 이름@ssh 접속 주소} "docker rm -f ${컨테이너 이름}"'
                    sh 'ssh -o StrictHostKeyChecking=no ${사용자 이름@ssh 접속 주소} "docker run -dp 3000:80 --net=bridge --name ${컨테이너 이름} ${도커 허브 이름/도커 이미지 이름:태그}"'
                    sh 'docker image prune -f'
                }
            }
        }
    }
}
